// Generated by the protocol buffer compiler.  DO NOT EDIT!

package com.blemobi.sep.probuf.nano;

@SuppressWarnings("hiding")
public interface ResultProtos {

  public static final class PResult extends
      com.google.protobuf.nano.MessageNano {

    private static volatile PResult[] _emptyArray;
    public static PResult[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new PResult[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional int32 errorCode = 1;
    public int errorCode;

    // optional string errorMsg = 2;
    public java.lang.String errorMsg;

    // optional string extraInfo = 3;
    public java.lang.String extraInfo;

    public PResult() {
      clear();
    }

    public PResult clear() {
      errorCode = 0;
      errorMsg = "";
      extraInfo = "";
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.errorCode != 0) {
        output.writeInt32(1, this.errorCode);
      }
      if (!this.errorMsg.equals("")) {
        output.writeString(2, this.errorMsg);
      }
      if (!this.extraInfo.equals("")) {
        output.writeString(3, this.extraInfo);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.errorCode != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(1, this.errorCode);
      }
      if (!this.errorMsg.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(2, this.errorMsg);
      }
      if (!this.extraInfo.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(3, this.extraInfo);
      }
      return size;
    }

    @Override
    public PResult mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.errorCode = input.readInt32();
            break;
          }
          case 18: {
            this.errorMsg = input.readString();
            break;
          }
          case 26: {
            this.extraInfo = input.readString();
            break;
          }
        }
      }
    }

    public static PResult parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new PResult(), data);
    }

    public static PResult parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new PResult().mergeFrom(input);
    }
  }

  public static final class PJResult extends
      com.google.protobuf.nano.MessageNano {

    private static volatile PJResult[] _emptyArray;
    public static PJResult[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new PJResult[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional int32 code = 1;
    public int code;

    public PJResult() {
      clear();
    }

    public PJResult clear() {
      code = 0;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.code != 0) {
        output.writeInt32(1, this.code);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.code != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(1, this.code);
      }
      return size;
    }

    @Override
    public PJResult mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.code = input.readInt32();
            break;
          }
        }
      }
    }

    public static PJResult parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new PJResult(), data);
    }

    public static PJResult parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new PJResult().mergeFrom(input);
    }
  }

  public static final class PMessage extends
      com.google.protobuf.nano.MessageNano {

    private static volatile PMessage[] _emptyArray;
    public static PMessage[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new PMessage[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional int32 magic = 1;
    public int magic;

    // optional string type = 2;
    public java.lang.String type;

    // optional bytes data = 3;
    public byte[] data;

    public PMessage() {
      clear();
    }

    public PMessage clear() {
      magic = 0;
      type = "";
      data = com.google.protobuf.nano.WireFormatNano.EMPTY_BYTES;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.magic != 0) {
        output.writeInt32(1, this.magic);
      }
      if (!this.type.equals("")) {
        output.writeString(2, this.type);
      }
      if (!java.util.Arrays.equals(this.data, com.google.protobuf.nano.WireFormatNano.EMPTY_BYTES)) {
        output.writeBytes(3, this.data);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.magic != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(1, this.magic);
      }
      if (!this.type.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(2, this.type);
      }
      if (!java.util.Arrays.equals(this.data, com.google.protobuf.nano.WireFormatNano.EMPTY_BYTES)) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBytesSize(3, this.data);
      }
      return size;
    }

    @Override
    public PMessage mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.magic = input.readInt32();
            break;
          }
          case 18: {
            this.type = input.readString();
            break;
          }
          case 26: {
            this.data = input.readBytes();
            break;
          }
        }
      }
    }

    public static PMessage parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new PMessage(), data);
    }

    public static PMessage parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new PMessage().mergeFrom(input);
    }
  }

  public static final class PManyUUID extends
      com.google.protobuf.nano.MessageNano {

    private static volatile PManyUUID[] _emptyArray;
    public static PManyUUID[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new PManyUUID[0];
          }
        }
      }
      return _emptyArray;
    }

    // repeated string ManyUUID = 1;
    public java.lang.String[] manyUUID;

    public PManyUUID() {
      clear();
    }

    public PManyUUID clear() {
      manyUUID = com.google.protobuf.nano.WireFormatNano.EMPTY_STRING_ARRAY;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.manyUUID != null && this.manyUUID.length > 0) {
        for (int i = 0; i < this.manyUUID.length; i++) {
          java.lang.String element = this.manyUUID[i];
          if (element != null) {
            output.writeString(1, element);
          }
        }
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.manyUUID != null && this.manyUUID.length > 0) {
        int dataCount = 0;
        int dataSize = 0;
        for (int i = 0; i < this.manyUUID.length; i++) {
          java.lang.String element = this.manyUUID[i];
          if (element != null) {
            dataCount++;
            dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeStringSizeNoTag(element);
          }
        }
        size += dataSize;
        size += 1 * dataCount;
      }
      return size;
    }

    @Override
    public PManyUUID mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 10);
            int i = this.manyUUID == null ? 0 : this.manyUUID.length;
            java.lang.String[] newArray = new java.lang.String[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.manyUUID, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = input.readString();
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = input.readString();
            this.manyUUID = newArray;
            break;
          }
        }
      }
    }

    public static PManyUUID parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new PManyUUID(), data);
    }

    public static PManyUUID parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new PManyUUID().mergeFrom(input);
    }
  }

  public static final class PManyErrorCode extends
      com.google.protobuf.nano.MessageNano {

    private static volatile PManyErrorCode[] _emptyArray;
    public static PManyErrorCode[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new PManyErrorCode[0];
          }
        }
      }
      return _emptyArray;
    }

    // repeated int32 ManyErrorCode = 1;
    public int[] manyErrorCode;

    public PManyErrorCode() {
      clear();
    }

    public PManyErrorCode clear() {
      manyErrorCode = com.google.protobuf.nano.WireFormatNano.EMPTY_INT_ARRAY;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.manyErrorCode != null && this.manyErrorCode.length > 0) {
        for (int i = 0; i < this.manyErrorCode.length; i++) {
          output.writeInt32(1, this.manyErrorCode[i]);
        }
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.manyErrorCode != null && this.manyErrorCode.length > 0) {
        int dataSize = 0;
        for (int i = 0; i < this.manyErrorCode.length; i++) {
          int element = this.manyErrorCode[i];
          dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * this.manyErrorCode.length;
      }
      return size;
    }

    @Override
    public PManyErrorCode mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 8);
            int i = this.manyErrorCode == null ? 0 : this.manyErrorCode.length;
            int[] newArray = new int[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.manyErrorCode, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = input.readInt32();
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = input.readInt32();
            this.manyErrorCode = newArray;
            break;
          }
          case 10: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            // First pass to compute array length.
            int arrayLength = 0;
            int startPos = input.getPosition();
            while (input.getBytesUntilLimit() > 0) {
              input.readInt32();
              arrayLength++;
            }
            input.rewindToPosition(startPos);
            int i = this.manyErrorCode == null ? 0 : this.manyErrorCode.length;
            int[] newArray = new int[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.manyErrorCode, 0, newArray, 0, i);
            }
            for (; i < newArray.length; i++) {
              newArray[i] = input.readInt32();
            }
            this.manyErrorCode = newArray;
            input.popLimit(limit);
            break;
          }
        }
      }
    }

    public static PManyErrorCode parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new PManyErrorCode(), data);
    }

    public static PManyErrorCode parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new PManyErrorCode().mergeFrom(input);
    }
  }

  public static final class PStringList extends
      com.google.protobuf.nano.MessageNano {

    private static volatile PStringList[] _emptyArray;
    public static PStringList[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new PStringList[0];
          }
        }
      }
      return _emptyArray;
    }

    // repeated string List = 1;
    public java.lang.String[] list;

    public PStringList() {
      clear();
    }

    public PStringList clear() {
      list = com.google.protobuf.nano.WireFormatNano.EMPTY_STRING_ARRAY;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.list != null && this.list.length > 0) {
        for (int i = 0; i < this.list.length; i++) {
          java.lang.String element = this.list[i];
          if (element != null) {
            output.writeString(1, element);
          }
        }
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.list != null && this.list.length > 0) {
        int dataCount = 0;
        int dataSize = 0;
        for (int i = 0; i < this.list.length; i++) {
          java.lang.String element = this.list[i];
          if (element != null) {
            dataCount++;
            dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeStringSizeNoTag(element);
          }
        }
        size += dataSize;
        size += 1 * dataCount;
      }
      return size;
    }

    @Override
    public PStringList mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 10);
            int i = this.list == null ? 0 : this.list.length;
            java.lang.String[] newArray = new java.lang.String[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.list, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = input.readString();
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = input.readString();
            this.list = newArray;
            break;
          }
        }
      }
    }

    public static PStringList parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new PStringList(), data);
    }

    public static PStringList parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new PStringList().mergeFrom(input);
    }
  }

  public static final class PInt64List extends
      com.google.protobuf.nano.MessageNano {

    private static volatile PInt64List[] _emptyArray;
    public static PInt64List[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new PInt64List[0];
          }
        }
      }
      return _emptyArray;
    }

    // repeated int64 List = 1;
    public long[] list;

    public PInt64List() {
      clear();
    }

    public PInt64List clear() {
      list = com.google.protobuf.nano.WireFormatNano.EMPTY_LONG_ARRAY;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.list != null && this.list.length > 0) {
        for (int i = 0; i < this.list.length; i++) {
          output.writeInt64(1, this.list[i]);
        }
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.list != null && this.list.length > 0) {
        int dataSize = 0;
        for (int i = 0; i < this.list.length; i++) {
          long element = this.list[i];
          dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeInt64SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * this.list.length;
      }
      return size;
    }

    @Override
    public PInt64List mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 8);
            int i = this.list == null ? 0 : this.list.length;
            long[] newArray = new long[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.list, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = input.readInt64();
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = input.readInt64();
            this.list = newArray;
            break;
          }
          case 10: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            // First pass to compute array length.
            int arrayLength = 0;
            int startPos = input.getPosition();
            while (input.getBytesUntilLimit() > 0) {
              input.readInt64();
              arrayLength++;
            }
            input.rewindToPosition(startPos);
            int i = this.list == null ? 0 : this.list.length;
            long[] newArray = new long[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.list, 0, newArray, 0, i);
            }
            for (; i < newArray.length; i++) {
              newArray[i] = input.readInt64();
            }
            this.list = newArray;
            input.popLimit(limit);
            break;
          }
        }
      }
    }

    public static PInt64List parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new PInt64List(), data);
    }

    public static PInt64List parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new PInt64List().mergeFrom(input);
    }
  }

  public static final class PInt32List extends
      com.google.protobuf.nano.MessageNano {

    private static volatile PInt32List[] _emptyArray;
    public static PInt32List[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new PInt32List[0];
          }
        }
      }
      return _emptyArray;
    }

    // repeated int32 List = 1;
    public int[] list;

    public PInt32List() {
      clear();
    }

    public PInt32List clear() {
      list = com.google.protobuf.nano.WireFormatNano.EMPTY_INT_ARRAY;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.list != null && this.list.length > 0) {
        for (int i = 0; i < this.list.length; i++) {
          output.writeInt32(1, this.list[i]);
        }
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.list != null && this.list.length > 0) {
        int dataSize = 0;
        for (int i = 0; i < this.list.length; i++) {
          int element = this.list[i];
          dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * this.list.length;
      }
      return size;
    }

    @Override
    public PInt32List mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 8);
            int i = this.list == null ? 0 : this.list.length;
            int[] newArray = new int[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.list, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = input.readInt32();
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = input.readInt32();
            this.list = newArray;
            break;
          }
          case 10: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            // First pass to compute array length.
            int arrayLength = 0;
            int startPos = input.getPosition();
            while (input.getBytesUntilLimit() > 0) {
              input.readInt32();
              arrayLength++;
            }
            input.rewindToPosition(startPos);
            int i = this.list == null ? 0 : this.list.length;
            int[] newArray = new int[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.list, 0, newArray, 0, i);
            }
            for (; i < newArray.length; i++) {
              newArray[i] = input.readInt32();
            }
            this.list = newArray;
            input.popLimit(limit);
            break;
          }
        }
      }
    }

    public static PInt32List parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new PInt32List(), data);
    }

    public static PInt32List parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new PInt32List().mergeFrom(input);
    }
  }

  public static final class PBoolList extends
      com.google.protobuf.nano.MessageNano {

    private static volatile PBoolList[] _emptyArray;
    public static PBoolList[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new PBoolList[0];
          }
        }
      }
      return _emptyArray;
    }

    // repeated bool List = 1;
    public boolean[] list;

    public PBoolList() {
      clear();
    }

    public PBoolList clear() {
      list = com.google.protobuf.nano.WireFormatNano.EMPTY_BOOLEAN_ARRAY;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.list != null && this.list.length > 0) {
        for (int i = 0; i < this.list.length; i++) {
          output.writeBool(1, this.list[i]);
        }
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.list != null && this.list.length > 0) {
        int dataSize = 1 * this.list.length;
        size += dataSize;
        size += 1 * this.list.length;
      }
      return size;
    }

    @Override
    public PBoolList mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 8);
            int i = this.list == null ? 0 : this.list.length;
            boolean[] newArray = new boolean[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.list, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = input.readBool();
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = input.readBool();
            this.list = newArray;
            break;
          }
          case 10: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            // First pass to compute array length.
            int arrayLength = 0;
            int startPos = input.getPosition();
            while (input.getBytesUntilLimit() > 0) {
              input.readBool();
              arrayLength++;
            }
            input.rewindToPosition(startPos);
            int i = this.list == null ? 0 : this.list.length;
            boolean[] newArray = new boolean[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.list, 0, newArray, 0, i);
            }
            for (; i < newArray.length; i++) {
              newArray[i] = input.readBool();
            }
            this.list = newArray;
            input.popLimit(limit);
            break;
          }
        }
      }
    }

    public static PBoolList parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new PBoolList(), data);
    }

    public static PBoolList parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new PBoolList().mergeFrom(input);
    }
  }

  public static final class PFloat64List extends
      com.google.protobuf.nano.MessageNano {

    private static volatile PFloat64List[] _emptyArray;
    public static PFloat64List[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new PFloat64List[0];
          }
        }
      }
      return _emptyArray;
    }

    // repeated double List = 1;
    public double[] list;

    public PFloat64List() {
      clear();
    }

    public PFloat64List clear() {
      list = com.google.protobuf.nano.WireFormatNano.EMPTY_DOUBLE_ARRAY;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.list != null && this.list.length > 0) {
        for (int i = 0; i < this.list.length; i++) {
          output.writeDouble(1, this.list[i]);
        }
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.list != null && this.list.length > 0) {
        int dataSize = 8 * this.list.length;
        size += dataSize;
        size += 1 * this.list.length;
      }
      return size;
    }

    @Override
    public PFloat64List mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 9: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 9);
            int i = this.list == null ? 0 : this.list.length;
            double[] newArray = new double[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.list, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = input.readDouble();
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = input.readDouble();
            this.list = newArray;
            break;
          }
          case 10: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            int arrayLength = length / 8;
            int i = this.list == null ? 0 : this.list.length;
            double[] newArray = new double[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.list, 0, newArray, 0, i);
            }
            for (; i < newArray.length; i++) {
              newArray[i] = input.readDouble();
            }
            this.list = newArray;
            input.popLimit(limit);
            break;
          }
        }
      }
    }

    public static PFloat64List parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new PFloat64List(), data);
    }

    public static PFloat64List parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new PFloat64List().mergeFrom(input);
    }
  }

  public static final class PStringSingle extends
      com.google.protobuf.nano.MessageNano {

    private static volatile PStringSingle[] _emptyArray;
    public static PStringSingle[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new PStringSingle[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional string Val = 1;
    public java.lang.String val;

    public PStringSingle() {
      clear();
    }

    public PStringSingle clear() {
      val = "";
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (!this.val.equals("")) {
        output.writeString(1, this.val);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (!this.val.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(1, this.val);
      }
      return size;
    }

    @Override
    public PStringSingle mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.val = input.readString();
            break;
          }
        }
      }
    }

    public static PStringSingle parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new PStringSingle(), data);
    }

    public static PStringSingle parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new PStringSingle().mergeFrom(input);
    }
  }

  public static final class PInt64Single extends
      com.google.protobuf.nano.MessageNano {

    private static volatile PInt64Single[] _emptyArray;
    public static PInt64Single[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new PInt64Single[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional int64 Val = 1;
    public long val;

    public PInt64Single() {
      clear();
    }

    public PInt64Single clear() {
      val = 0L;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.val != 0L) {
        output.writeInt64(1, this.val);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.val != 0L) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt64Size(1, this.val);
      }
      return size;
    }

    @Override
    public PInt64Single mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.val = input.readInt64();
            break;
          }
        }
      }
    }

    public static PInt64Single parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new PInt64Single(), data);
    }

    public static PInt64Single parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new PInt64Single().mergeFrom(input);
    }
  }

  public static final class PInt32Single extends
      com.google.protobuf.nano.MessageNano {

    private static volatile PInt32Single[] _emptyArray;
    public static PInt32Single[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new PInt32Single[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional int32 Val = 1;
    public int val;

    public PInt32Single() {
      clear();
    }

    public PInt32Single clear() {
      val = 0;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.val != 0) {
        output.writeInt32(1, this.val);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.val != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(1, this.val);
      }
      return size;
    }

    @Override
    public PInt32Single mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.val = input.readInt32();
            break;
          }
        }
      }
    }

    public static PInt32Single parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new PInt32Single(), data);
    }

    public static PInt32Single parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new PInt32Single().mergeFrom(input);
    }
  }

  public static final class PBoolSingle extends
      com.google.protobuf.nano.MessageNano {

    private static volatile PBoolSingle[] _emptyArray;
    public static PBoolSingle[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new PBoolSingle[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional bool Val = 1;
    public boolean val;

    public PBoolSingle() {
      clear();
    }

    public PBoolSingle clear() {
      val = false;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.val != false) {
        output.writeBool(1, this.val);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.val != false) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBoolSize(1, this.val);
      }
      return size;
    }

    @Override
    public PBoolSingle mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.val = input.readBool();
            break;
          }
        }
      }
    }

    public static PBoolSingle parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new PBoolSingle(), data);
    }

    public static PBoolSingle parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new PBoolSingle().mergeFrom(input);
    }
  }

  public static final class PFloat64Single extends
      com.google.protobuf.nano.MessageNano {

    private static volatile PFloat64Single[] _emptyArray;
    public static PFloat64Single[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new PFloat64Single[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional double Val = 1;
    public double val;

    public PFloat64Single() {
      clear();
    }

    public PFloat64Single clear() {
      val = 0D;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (java.lang.Double.doubleToLongBits(this.val)
          != java.lang.Double.doubleToLongBits(0D)) {
        output.writeDouble(1, this.val);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (java.lang.Double.doubleToLongBits(this.val)
          != java.lang.Double.doubleToLongBits(0D)) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeDoubleSize(1, this.val);
      }
      return size;
    }

    @Override
    public PFloat64Single mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 9: {
            this.val = input.readDouble();
            break;
          }
        }
      }
    }

    public static PFloat64Single parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new PFloat64Single(), data);
    }

    public static PFloat64Single parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new PFloat64Single().mergeFrom(input);
    }
  }
}
